{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\blogtempletversion\\\\vesion2\\\\frontend\\\\src\\\\component\\\\hook\\\\addtagdropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckIfHaveTag({\n  child\n}) {\n  _s();\n  const [childtags, setChildTags] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const fetchChildTagsData = async () => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/api/childtags/${child.id}`);\n      setChildTags(response.data);\n      setIsLoading(false);\n      setIsError(false);\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {}, 2000);\n\n    // Fetch data immediately when the component mounts\n    fetchChildTagsData();\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [child]);\n  if (isError || isLoading) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: childtags && childtags.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: childtags.children.map(childTag => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/tag/${childTag.TITLE}`,\n              children: childTag.TITLE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: childTag.children && childTag.children.map(childTagse => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/tag/${childTagse.TITLE}`,\n                    children: childTagse.TITLE\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 29\n                  }, this)\n                }, childTagse.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, childTag.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CheckIfHaveTag, \"Jwj5vrKvlls62jg2ch7ZM0Wsm0I=\");\n_c = CheckIfHaveTag;\nvar _c;\n$RefreshReg$(_c, \"CheckIfHaveTag\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckIfHaveTag","child","_s","childtags","setChildTags","isLoading","setIsLoading","isError","setIsError","fetchChildTagsData","response","get","id","data","error","intervalId","setInterval","clearInterval","children","map","childTag","to","TITLE","fileName","_jsxFileName","lineNumber","columnNumber","childTagse","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/blogtempletversion/vesion2/frontend/src/component/hook/addtagdropdown.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CheckIfHaveTag({ child }) {\r\n  const [childtags, setChildTags] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const fetchChildTagsData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/childtags/${child.id}`\r\n      );\r\n      setChildTags(response.data);\r\n      setIsLoading(false);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      setIsError(true);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {}, 2000);\r\n\r\n    // Fetch data immediately when the component mounts\r\n    fetchChildTagsData();\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [child]);\r\n\r\n  if (isError || isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {childtags && childtags.children && (\r\n        <ul>\r\n          <>\r\n            {childtags.children.map((childTag) => (\r\n              <>\r\n                <li key={childTag.id}>\r\n                  <Link to={`/tag/${childTag.TITLE}`}>{childTag.TITLE}</Link>\r\n                  <ul>\r\n                    {childTag.children &&\r\n                      childTag.children.map((childTagse) => (\r\n                        <>\r\n                          <li key={childTagse.id}>\r\n                            <Link to={`/tag/${childTagse.TITLE}`}>\r\n                              {childTagse.TITLE}\r\n                            </Link>\r\n                          </li>\r\n                        </>\r\n                      ))}\r\n                  </ul>\r\n                </li>\r\n              </>\r\n            ))}\r\n          </>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}